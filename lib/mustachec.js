// Generated by CoffeeScript 1.7.1
(function() {
  var Cheerio, FS, Hogan, Path,
    __hasProp = {}.hasOwnProperty;

  FS = require("fs");

  Path = require("path");

  Cheerio = require("cheerio");

  Hogan = require("hogan.js");

  exports.compile = function(args, options) {
    var $, $templates, code, html, htmlFile, js, jsDir, jsFile, jsName, name, templates, _i, _len, _results;
    if (options == null) {
      options = {};
    }
    if (options.out) {
      options.out = Path.join(process.cwd(), options.out);
    }
    if (options.assign == null) {
      options.assign = "window.compiledTemplates";
    }
    if (options.selector == null) {
      options.selector = "script[type='text/x-mustache-template']";
    }
    _results = [];
    for (_i = 0, _len = args.length; _i < _len; _i++) {
      htmlFile = args[_i];
      html = FS.readFileSync(htmlFile, {
        encoding: "utf8"
      });
      $ = Cheerio.load(html);
      $templates = $(options.selector);
      templates = {};
      $templates.each(function(element) {
        var $element;
        $element = $(element);
        return templates[$element.attr("id")] = Hogan.compile($element.text(), {
          asString: true
        });
      });
      js = [];
      js.push("" + options.assign + " = {}");
      for (name in templates) {
        if (!__hasProp.call(templates, name)) continue;
        code = templates[name];
        js.push("" + options.assign + "[\"" + name + "\"] = new Hogan.Template(" + code + ");");
      }
      js = js.join("\n") + "\n";
      jsDir = options.out || Path.dirname(htmlFile);
      jsName = Path.basename(htmlFile, Path.extname(htmlFile));
      jsFile = Path.join(jsDir, jsName + "-templates.js");
      _results.push(FS.writeFileSync(jsFile, js));
    }
    return _results;
  };

}).call(this);
